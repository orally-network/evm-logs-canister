type EventNotification = record {
  source : principal;
  filter : opt text;
  chain_id : nat32;
  sub_id : nat;
  timestamp : nat64;
  event_id : nat;
  log_entry : LogEntry;
};

type LogEntry = record {
  transactionHash : opt text;
  blockNumber : opt nat;
  data : text;
  blockHash : opt text;
  transactionIndex : opt nat;
  topics : vec text;
  address : text;
  logIndex : opt nat;
  removed : bool;
};

type SendNotificationError = variant { 
  FailedToSend; 
  InvalidSubscriber 
};

type SendNotificationResult = variant { 
  Ok; 
  Err : SendNotificationError 
};

service : {
  get_candid_pointer : () -> (text) query;
  send_notification : (principal, EventNotification) -> (SendNotificationResult);
}
